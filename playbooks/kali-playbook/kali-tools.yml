---
# Playbook for Kali

# Deploy tools not found in the Kali repositories
- hosts: kali
  become: true
  tasks:
    - name: Install Burp Suite
      ansible.builtin.include_role:
        name: "ansible-role-burpsuite"

    - name: Create .burpsuitepro_licensed after successful Pro install
      ansible.builtin.file:
        path: "{{ kali_user_details.home }}/.burpsuitepro_licensed"
        state: touch
      when: 'burpsuite_product_type == "pro"'

    # Clone git repos
    - name: Clone git repositories
      ansible.builtin.git:
        repo: "{{ item.repo }}"
        dest: "/opt/{{ item.name }}"
        version: "{{ item.version | default('master') }}"
        depth: 1
        force: true
      loop: "{{ git_repos | flatten(levels=1) }}"

    # Only uncomment this section if you have added repos into the private_repos list
    # Private git repos
    #- name: Ensure destination directory exists
    #  ansible.builtin.file:
    #    dest: "{{ kali_user_details.home }}/Projects"
    #    state: directory
    #    owner: root
    #    group: root
    #    mode: '750'

    #- name: Clone private git repos
    #  ansible.builtin.git:
    #    repo: "{{ item.repo }}"
    #    dest: "{{ kali_user_details.home }}/Projects/{{ item.name }}"
    #    version: "{{ item.version | default('master') }}"
    #    depth: 1
    #    force: true
    #    key_file: "{{ kali_user_details.home }}/.ssh/id_rsa"
    #  loop: "{{ private_repos | flatten(levels=1) }}"

    # Miscellaneous tools
    - name: Ensure destination directory exists
      ansible.builtin.file:
        dest: "{{ item.dest | dirname }}"
        state: directory
        owner: root
        group: root
        mode: '750'
      loop: "{{ misc_downloads }}"

    - name: Download files
      ansible.builtin.get_url:
        url: "{{ item.url }}"
        dest: "{{ item.dest }}"
        owner: root
        group: root
        mode: "{{ item.mode | default('0644') }}"
      loop: "{{ misc_downloads }}"

    - name: Install via shell
      ansible.builtin.shell:
        cmd: "{{ item.cmd }}"
        creates: "{{ item.dest }}"
      loop: "{{ shell_installs }}"

    - name: Install via command
      ansible.builtin.command:
        cmd: "{{ item.cmd }}"
        creates: "{{ item.dest }}"
      loop: "{{ cmd_installs }}"
